pwd
ls
clear
install.packages("devtools")
source("http://bioconductor.org/bioclite.r")
source("http://bioconductor.org/biocLite.R")
biocLite()
n
library(ggplot2)
search()
find.package("devtools")
find_rtools()
library(devtools)
find_rtools()
install.packages("KernSmooth")
copyright
library(KernSmooth)
getwd()
exit
getwd()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
if(x > 5) {
y <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
setwd("F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2")
makeCacheMatrix <- function(x = matrix()) {
makeCacheMatrix <- function(x = matrix()) {
}
makeCacheMatrix <- function(x = matrix()) {
}
makecashematrix
makeCacheMatrix()
getwd()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
ls()
?"function"
?"$"
source('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
a<-matri(6:10,2,2)
a<-matrix(6:10,2,2)
a<-matrix(7:10,2,2)
a
ls()
casheSolve(a)
source('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
cacheSolve(a)
g <- x$getSolve()
a
solve(a)
source('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
makeCacheMatrix(a)
vect<-c(2,4,8)
vect
cashemean(vect)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cashemean(vect)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
ls()
cachemean(b)
cachemean(vect)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(vect)
makeVector(vect)
cachemean(vect)
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(vect)
cachemean(vect)
makeVector(vect)
b<-c(2,4,8)
makeVector(b)
x$getmean()
source('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
list()
x$getInverse()
x$get()
x$set()
inv <- cacheSolve(x)
solve(m)
source('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
inv
inv <- cacheSolve(x)
inv
source('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
a
solve(a)
x<-makeCacheMatrix(a)
x$get()
inv<-cacheSolve(x)
inv
inv<-cacheSolve(x)
inv
debugSource('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
inv<-cacheSolve(x)
m
a
x
debugSource('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
debugSource('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
debugSource('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
inv<-cacheSolve(x)
m
x
debugSource('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
x
debugSource('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
inv<-cacheSolve(x)
debugSource('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
x<-makeCacheMatrix(a)
x
m
x<-makeCacheMatrix(a)
debugSource('F:/Fall 2015/Data Science/Rstudio Working Directory/11-22-2015/Programmingassignment2/cachematrix.R')
x<-makeCacheMatrix(a)
m
m
m
x
x
cacheSolve(x)
vect
makeVector(vect)
x$get()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(vect)
x$get()
mean1<-cachemean(x)
